source("function/TS_function.R")
devtools::document(pkg = paste0("own_package/",
"PredictFutureOrder"))
#devtools::check(paste0("own_package/",
#                  "PredictFutureOrder"))  #check whether there's problem
#devtools::install(pkg = paste0("own_package/",
#                              "PredictFutureOrder"),
#                  reload = TRUE)
library(PredictFutureOrder)
rm(list = c("aggregate_time_series", "generate_forecast",
"plot_forecast", "plot_time_series"))
devtools::document(pkg = paste0("own_package/",
"PredictFutureOrder"))
devtools::check(paste0("own_package/",
"PredictFutureOrder"))  #check whether there's problem
#devtools::document(pkg = paste0("own_package/",
#                             "PredictFutureOrder"))
#devtools::check(paste0("own_package/",
#                 "PredictFutureOrder"))  #check whether there's problem
devtools::install(pkg = paste0("own_package/",
"PredictFutureOrder"),
reload = TRUE)
#devtools::document(pkg = paste0("own_package/",
#                             "PredictFutureOrder"))
#devtools::check(paste0("own_package/",
#                 "PredictFutureOrder"))  #check whether there's problem
#devtools::install(pkg = paste0("own_package/",
#                              "PredictFutureOrder"),
#                 reload = TRUE)
library(PredictFutureOrder)
library(shiny); runApp('visualizaiton_platform_version01.R')
devtools::document(pkg = paste0("own_package/",
"PredictFutureOrder"))
devtools::check(paste0("own_package/",
"PredictFutureOrder"))  #check whether there's problem
#devtools::document(pkg = paste0("own_package/",
#                            "PredictFutureOrder"))
#devtools::check(paste0("own_package/",
#                "PredictFutureOrder"))  #check whether there's problem
devtools::install(pkg = paste0("own_package/",
"PredictFutureOrder"),
reload = TRUE)
library(PredictFutureOrder)
runApp('visualizaiton_platform_version01.R')
########################Data processing for page 6 ##########################
vip_num=row_number(processed_data_tbl)[1:800]
aggregate_time_series <-
function(data, ORDERDATE,SALES, time_unit = "month") {
output_tbl <- data %>%
dplyr::mutate(date = floor_date(ORDERDATE, unit = time_unit)) %>%
group_by(date) %>%
summarize(total_sales = sum(SALES)) %>%
ungroup() %>%
dplyr::mutate(label_text = str_glue("Date: {date}
Revenue: {scales::dollar(total_sales)}"))
return(output_tbl)
}
aggregate_time_series(processed_data_tbl)
processed_data_tbl
devtools::document(pkg = paste0("own_package/",
"PredictFutureOrder"))
rm(list = c("aggregate_time_series"))
devtools::document(pkg = paste0("own_package/",
"PredictFutureOrder"))
devtools::check(paste0("own_package/",
"PredictFutureOrder"))  #check whether there's problem
#devtools::document(pkg = paste0("own_package/",
#                            "PredictFutureOrder"))
#devtools::check(paste0("own_package/",
#                "PredictFutureOrder"))  #check whether there's problem
devtools::install(pkg = paste0("own_package/",
"PredictFutureOrder"),
reload = TRUE)
#devtools::document(pkg = paste0("own_package/",
#                            "PredictFutureOrder"))
#devtools::check(paste0("own_package/",
#                "PredictFutureOrder"))  #check whether there's problem
#devtools::install(pkg = paste0("own_package/",
#                             "PredictFutureOrder"),
#                 reload = TRUE)
library(PredictFutureOrder)
runApp('visualizaiton_platform_version01.R')
cf_data <- user_behavior_data[user_behavior_data$behavior_type=='cart'|user_behavior_data$behavior_type=='fav',]
library(shiny); runApp('visualizaiton_platform_version01.R')
